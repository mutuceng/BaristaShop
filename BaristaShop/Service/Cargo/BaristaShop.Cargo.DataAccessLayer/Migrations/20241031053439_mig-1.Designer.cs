// <auto-generated />
using System;
using BaristaShop.Cargo.DataAccessLayer.Concrete;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BaristaShop.Cargo.DataAccessLayer.Migrations
{
    [DbContext(typeof(CargoContext))]
    [Migration("20241031053439_mig-1")]
    partial class mig1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BaristaShop.Cargo.EntityLayer.Concrete.CargoCompany", b =>
                {
                    b.Property<int>("CargoCompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CargoCompanyId"));

                    b.Property<string>("CargoCompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CargoCompanyPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CargoCompanyId");

                    b.ToTable("CargoCompanies");
                });

            modelBuilder.Entity("BaristaShop.Cargo.EntityLayer.Concrete.CargoCustomer", b =>
                {
                    b.Property<int>("CargoCustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CargoCustomerId"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DetailedAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("District")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserCustomerId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CargoCustomerId");

                    b.ToTable("CargoCustomers");
                });

            modelBuilder.Entity("BaristaShop.Cargo.EntityLayer.Concrete.ShipmentDetail", b =>
                {
                    b.Property<int>("ShipmentDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShipmentDetailId"));

                    b.Property<int>("CargoCompanyId")
                        .HasColumnType("int");

                    b.Property<string>("Consignee")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Consignor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Origin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ShippingBillId")
                        .HasColumnType("int");

                    b.Property<int>("TrackId")
                        .HasColumnType("int");

                    b.HasKey("ShipmentDetailId");

                    b.HasIndex("CargoCompanyId");

                    b.HasIndex("ShippingBillId")
                        .IsUnique();

                    b.ToTable("ShipmentDetails");
                });

            modelBuilder.Entity("BaristaShop.Cargo.EntityLayer.Concrete.ShipmentOperation", b =>
                {
                    b.Property<int>("ShipmentOperationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShipmentOperationId"));

                    b.Property<string>("Barcode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OperationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ShipmentDetailId")
                        .HasColumnType("int");

                    b.HasKey("ShipmentOperationId");

                    b.HasIndex("ShipmentDetailId");

                    b.ToTable("ShipmentOperations");
                });

            modelBuilder.Entity("BaristaShop.Cargo.EntityLayer.Concrete.ShippingBill", b =>
                {
                    b.Property<int>("ShippingBillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShippingBillId"));

                    b.Property<int>("CargoDesi")
                        .HasColumnType("int");

                    b.Property<string>("PacketType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ShipmentDetailId")
                        .HasColumnType("int");

                    b.Property<double>("ShippingCharge")
                        .HasColumnType("float");

                    b.HasKey("ShippingBillId");

                    b.ToTable("ShippingBills");
                });

            modelBuilder.Entity("BaristaShop.Cargo.EntityLayer.Concrete.ShipmentDetail", b =>
                {
                    b.HasOne("BaristaShop.Cargo.EntityLayer.Concrete.CargoCompany", "CargoCompany")
                        .WithMany()
                        .HasForeignKey("CargoCompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BaristaShop.Cargo.EntityLayer.Concrete.ShippingBill", "ShippingBill")
                        .WithOne("ShipmentDetail")
                        .HasForeignKey("BaristaShop.Cargo.EntityLayer.Concrete.ShipmentDetail", "ShippingBillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CargoCompany");

                    b.Navigation("ShippingBill");
                });

            modelBuilder.Entity("BaristaShop.Cargo.EntityLayer.Concrete.ShipmentOperation", b =>
                {
                    b.HasOne("BaristaShop.Cargo.EntityLayer.Concrete.ShipmentDetail", "ShipmentDetail")
                        .WithMany("ShipmentOperations")
                        .HasForeignKey("ShipmentDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShipmentDetail");
                });

            modelBuilder.Entity("BaristaShop.Cargo.EntityLayer.Concrete.ShipmentDetail", b =>
                {
                    b.Navigation("ShipmentOperations");
                });

            modelBuilder.Entity("BaristaShop.Cargo.EntityLayer.Concrete.ShippingBill", b =>
                {
                    b.Navigation("ShipmentDetail")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
